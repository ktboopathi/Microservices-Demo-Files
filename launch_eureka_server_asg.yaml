# Starts the Auto Scaling Group  for Eureka (no ELBs for this)
# ***** NEED pre-existing custom AMI for this *****

- hosts: localhost
  gather_facts: no
  vars: 
     region: us-east-1
     keypair_name: kops-microservices-demo
     security_group_name: eureka-server-security-group
     instance_type: t2.nano
     image_id: ami-02a75900bc86f865f ## custom AMI id 

  tasks:
   - name: Setup security group for Eureka 
     ec2_group:
        name: "{{ security_group_name }}"
        description: Security rules for Eureka
        region: "{{ region }}"
        rules_egress:
            - proto: tcp
              from_port: 0
              to_port: 65535
              cidr_ip: 0.0.0.0/0
        rules:
           - proto: tcp
             from_port: 8010
             to_port: 8010
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 22
             to_port: 22
             cidr_ip: 0.0.0.0/0
     register: eureka_security

   - name: Setup Launch Configuration for Config Server AMI
     ec2_lc:
        name: Eureka-Launch-Config
        image_id: "{{ image_id }}"
        key_name: "{{ keypair_name }}"
        region: "{{ region }}"
        security_groups: "{{ eureka_security.group_id }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: eureka-eip-reallocation

   - name: Start Eureka ASG
     ec2_asg:
        name: Eureka-ASG
        region: "{{ region }}"
        availability_zones: [ "{{ region }}b", "{{ region }}c" ]
        launch_config_name: "Eureka-Launch-Config"
        min_size: 2
        max_size: 2
        tags:
           - Name: "Eureka_Server"
        # load_balancers: [] Not used in Eureka - instead elastic IP addresses are used...

